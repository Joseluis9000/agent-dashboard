{"ast":null,"code":"/**\r\n * Google Cloud Function: loginHandler\r\n * Description: Handles POST login requests from your React app\r\n * Dependencies: None here unless you integrate Google Sheets API below\r\n */\n\nexports.loginHandler = async (req, res) => {\n  try {\n    // Ensure it is a POST request\n    if (req.method !== 'POST') {\n      return res.status(405).json({\n        success: false,\n        message: \"Method not allowed. Use POST.\"\n      });\n    }\n\n    // Parse the JSON body\n    const {\n      email,\n      password\n    } = req.body;\n\n    // Validate inputs\n    if (!email || !password) {\n      return res.status(400).json({\n        success: false,\n        message: \"Missing email or password.\"\n      });\n    }\n\n    // ðŸ”‘ TODO: Replace this dummy logic with Google Sheets authentication\n    // Simulated login for testing\n    if (email === \"test@example.com\" && password === \"1234\") {\n      return res.status(200).json({\n        success: true,\n        message: \"Login successful.\"\n      });\n    } else {\n      return res.status(401).json({\n        success: false,\n        message: \"Invalid email or password.\"\n      });\n    }\n  } catch (error) {\n    console.error(\"Login Handler Error:\", error);\n    return res.status(500).json({\n      success: false,\n      message: \"Internal Server Error.\"\n    });\n  }\n};","map":{"version":3,"names":["exports","loginHandler","req","res","method","status","json","success","message","email","password","body","error","console"],"sources":["C:/Users/gayta/OneDrive/Documents/agent-dashboard/src/index.js"],"sourcesContent":["/**\r\n * Google Cloud Function: loginHandler\r\n * Description: Handles POST login requests from your React app\r\n * Dependencies: None here unless you integrate Google Sheets API below\r\n */\r\n\r\nexports.loginHandler = async (req, res) => {\r\n  try {\r\n    // Ensure it is a POST request\r\n    if (req.method !== 'POST') {\r\n      return res.status(405).json({ success: false, message: \"Method not allowed. Use POST.\" });\r\n    }\r\n\r\n    // Parse the JSON body\r\n    const { email, password } = req.body;\r\n\r\n    // Validate inputs\r\n    if (!email || !password) {\r\n      return res.status(400).json({ success: false, message: \"Missing email or password.\" });\r\n    }\r\n\r\n    // ðŸ”‘ TODO: Replace this dummy logic with Google Sheets authentication\r\n    // Simulated login for testing\r\n    if (email === \"test@example.com\" && password === \"1234\") {\r\n      return res.status(200).json({ success: true, message: \"Login successful.\" });\r\n    } else {\r\n      return res.status(401).json({ success: false, message: \"Invalid email or password.\" });\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error(\"Login Handler Error:\", error);\r\n    return res.status(500).json({ success: false, message: \"Internal Server Error.\" });\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEAA,OAAO,CAACC,YAAY,GAAG,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACzC,IAAI;IACF;IACA,IAAID,GAAG,CAACE,MAAM,KAAK,MAAM,EAAE;MACzB,OAAOD,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAgC,CAAC,CAAC;IAC3F;;IAEA;IACA,MAAM;MAAEC,KAAK;MAAEC;IAAS,CAAC,GAAGR,GAAG,CAACS,IAAI;;IAEpC;IACA,IAAI,CAACF,KAAK,IAAI,CAACC,QAAQ,EAAE;MACvB,OAAOP,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAA6B,CAAC,CAAC;IACxF;;IAEA;IACA;IACA,IAAIC,KAAK,KAAK,kBAAkB,IAAIC,QAAQ,KAAK,MAAM,EAAE;MACvD,OAAOP,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE,IAAI;QAAEC,OAAO,EAAE;MAAoB,CAAC,CAAC;IAC9E,CAAC,MAAM;MACL,OAAOL,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAA6B,CAAC,CAAC;IACxF;EAEF,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAOT,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAyB,CAAC,CAAC;EACpF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}