{"ast":null,"code":"```jsx\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Dashboard = () => {\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [commissionData, setCommissionData] = useState([]);\n  const [arSvData, setArSvData] = useState([]);\n  const arSvIndexMapRef = useRef({});\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const storedEmail = localStorage.getItem('userEmail');\n    const storedPassword = localStorage.getItem('userPassword');\n    if (storedEmail && storedPassword) {\n      setUserEmail(storedEmail);\n      setUserPassword(storedPassword);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (userEmail && userPassword) {\n      fetch('https://script.google.com/macros/s/AKfycbyK8X5TAGb3gtw1xZMvQcFgcgHlsSbAAfXbIICpiyRzxOquk7djd9nC-rkxLgvm6Ek8/exec')\n        .then((res) => res.json())\n        .then((data) => {\n          const matchedUser = data.find(\n            (item) =>\n              item.emails?.toLowerCase() === userEmail.toLowerCase() &&\n              String(item.password).trim() === userPassword\n          );\n\n          if (matchedUser) {\n            setIsAuthenticated(true);\n            const filtered = data.filter(\n              (item) => item.emails?.toLowerCase() === userEmail.toLowerCase()\n            );\n            setCommissionData(filtered);\n          } else {\n            setIsAuthenticated(false);\n          }\n        });\n\n      fetch('https://script.google.com/macros/s/AKfycbyK8X5TAGb3gtw1xZMvQcFgcgHlsSbAAfXbIICpiyRzxOquk7djd9nC-rkxLgvm6Ek8/exec')\n        .then((res) => res.json())\n        .then((data) => {\n          const [headers, ...rows] = data;\n          const indexMap = headers.reduce((acc, key, i) => {\n            acc[key.toLowerCase()] = i;\n            return acc;\n          }, {});\n          arSvIndexMapRef.current = indexMap;\n\n          const filtered = rows.filter(\n            (row) =>\n              row[indexMap['emails']]?.toLowerCase() === userEmail.toLowerCase()\n          );\n          setArSvData(filtered);\n        });\n    }\n  }, [userEmail, userPassword]);\n\n  const handleLogout = () => {\n    localStorage.removeItem('userEmail');\n    localStorage.removeItem('userPassword');\n    setUserEmail('');\n    setUserPassword('');\n    setIsAuthenticated(false);\n    navigate('/');\n  };\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      {isAuthenticated ? (\n        <>\n          <h2>Welcome, {userEmail}</h2>\n          <button onClick={handleLogout}>Logout</button>\n\n          <h3>Your Weekly Commission</h3>\n          {commissionData.length > 0 ? (\n            <ul>\n              {commissionData.map((entry, index) => (\n                <li key={index}>\n                  <strong>Week:</strong> {entry.commissionweek} | <strong>Region:</strong> {entry.region} <br />\n                  <strong>New Business:</strong> {entry.newbusiness} | <strong>Rewrite:</strong> {entry.rewrite} | <strong>Total NBs:</strong> {entry.totalnbs} <br />\n                  <strong>Gross Pay:</strong> ${entry.grosspay} | <strong>Bonus Tier:</strong> {entry.bonustier} | <strong>Total Bonus:</strong> ${entry.totalbonus}\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p>No commission data found.</p>\n          )}\n\n          <h3>Your Scanning Violations & ARs</h3>\n          {arSvData.length > 0 ? (\n            <ul>\n              {arSvData.map((row, index) => {\n                const map = arSvIndexMapRef.current;\n                const isAR = row[map['arfeeamount']];\n                const isSV = row[map['svfeeamount']];\n\n                return (\n                  <li key={index}>\n                    <strong>Week:</strong> {row[map['week']]}<br />\n                    {isAR && (\n                      <>\n                        <strong>Type:</strong> AR | <strong>Customer:</strong> {row[map['arcustomername']]} | <strong>Amount:</strong> ${row[map['arfeeamount']]}<br />\n                        <strong>Details:</strong> {row[map['ardetails']]}<br />\n                      </>\n                    )}\n                    {isSV && (\n                      <>\n                        <strong>Type:</strong> Scanning Violation | <strong>Customer:</strong> {row[map['svcustomername']]} | <strong>Amount:</strong> ${row[map['svfeeamount']]}<br />\n                        <strong>Details:</strong> {row[map['svdetails']]}<br />\n                      </>\n                    )}\n                  </li>\n                );\n              })}\n            </ul>\n          ) : (\n            <p>No violations or ARs found.</p>\n          )}\n        </>\n      ) : (\n        <h2>Unauthorized: Please check your login credentials.</h2>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n```;","map":{"version":3,"names":["entry","grosspay","totalbonus","row","map"],"sources":["C:/Users/gayta/OneDrive/Documents/agent-dashboard/src/pages/Dashboard.jsx"],"sourcesContent":["```jsx\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Dashboard = () => {\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [userPassword, setUserPassword] = useState('');\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [commissionData, setCommissionData] = useState([]);\r\n  const [arSvData, setArSvData] = useState([]);\r\n  const arSvIndexMapRef = useRef({});\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const storedEmail = localStorage.getItem('userEmail');\r\n    const storedPassword = localStorage.getItem('userPassword');\r\n    if (storedEmail && storedPassword) {\r\n      setUserEmail(storedEmail);\r\n      setUserPassword(storedPassword);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userEmail && userPassword) {\r\n      fetch('https://script.google.com/macros/s/AKfycbyK8X5TAGb3gtw1xZMvQcFgcgHlsSbAAfXbIICpiyRzxOquk7djd9nC-rkxLgvm6Ek8/exec')\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          const matchedUser = data.find(\r\n            (item) =>\r\n              item.emails?.toLowerCase() === userEmail.toLowerCase() &&\r\n              String(item.password).trim() === userPassword\r\n          );\r\n\r\n          if (matchedUser) {\r\n            setIsAuthenticated(true);\r\n            const filtered = data.filter(\r\n              (item) => item.emails?.toLowerCase() === userEmail.toLowerCase()\r\n            );\r\n            setCommissionData(filtered);\r\n          } else {\r\n            setIsAuthenticated(false);\r\n          }\r\n        });\r\n\r\n      fetch('https://script.google.com/macros/s/AKfycbyK8X5TAGb3gtw1xZMvQcFgcgHlsSbAAfXbIICpiyRzxOquk7djd9nC-rkxLgvm6Ek8/exec')\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          const [headers, ...rows] = data;\r\n          const indexMap = headers.reduce((acc, key, i) => {\r\n            acc[key.toLowerCase()] = i;\r\n            return acc;\r\n          }, {});\r\n          arSvIndexMapRef.current = indexMap;\r\n\r\n          const filtered = rows.filter(\r\n            (row) =>\r\n              row[indexMap['emails']]?.toLowerCase() === userEmail.toLowerCase()\r\n          );\r\n          setArSvData(filtered);\r\n        });\r\n    }\r\n  }, [userEmail, userPassword]);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('userEmail');\r\n    localStorage.removeItem('userPassword');\r\n    setUserEmail('');\r\n    setUserPassword('');\r\n    setIsAuthenticated(false);\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '2rem' }}>\r\n      {isAuthenticated ? (\r\n        <>\r\n          <h2>Welcome, {userEmail}</h2>\r\n          <button onClick={handleLogout}>Logout</button>\r\n\r\n          <h3>Your Weekly Commission</h3>\r\n          {commissionData.length > 0 ? (\r\n            <ul>\r\n              {commissionData.map((entry, index) => (\r\n                <li key={index}>\r\n                  <strong>Week:</strong> {entry.commissionweek} | <strong>Region:</strong> {entry.region} <br />\r\n                  <strong>New Business:</strong> {entry.newbusiness} | <strong>Rewrite:</strong> {entry.rewrite} | <strong>Total NBs:</strong> {entry.totalnbs} <br />\r\n                  <strong>Gross Pay:</strong> ${entry.grosspay} | <strong>Bonus Tier:</strong> {entry.bonustier} | <strong>Total Bonus:</strong> ${entry.totalbonus}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>No commission data found.</p>\r\n          )}\r\n\r\n          <h3>Your Scanning Violations & ARs</h3>\r\n          {arSvData.length > 0 ? (\r\n            <ul>\r\n              {arSvData.map((row, index) => {\r\n                const map = arSvIndexMapRef.current;\r\n                const isAR = row[map['arfeeamount']];\r\n                const isSV = row[map['svfeeamount']];\r\n\r\n                return (\r\n                  <li key={index}>\r\n                    <strong>Week:</strong> {row[map['week']]}<br />\r\n                    {isAR && (\r\n                      <>\r\n                        <strong>Type:</strong> AR | <strong>Customer:</strong> {row[map['arcustomername']]} | <strong>Amount:</strong> ${row[map['arfeeamount']]}<br />\r\n                        <strong>Details:</strong> {row[map['ardetails']]}<br />\r\n                      </>\r\n                    )}\r\n                    {isSV && (\r\n                      <>\r\n                        <strong>Type:</strong> Scanning Violation | <strong>Customer:</strong> {row[map['svcustomername']]} | <strong>Amount:</strong> ${row[map['svfeeamount']]}<br />\r\n                        <strong>Details:</strong> {row[map['svdetails']]}<br />\r\n                      </>\r\n                    )}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          ) : (\r\n            <p>No violations or ARs found.</p>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <h2>Unauthorized: Please check your login credentials.</h2>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n```\r\n\r\n"],"mappings":"AAAA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgDA,KAAK,CAACC,QAAQ,qFAAqFD,KAAK,CAACE,UAAU;AACnK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yIAAyIC,GAAG,CAACC,GAAG,CAAC,aAAa,CAAC,CAAC;AAChK;AACA;AACA;AACA;AACA;AACA,yJAAyJD,GAAG,CAACC,GAAG,CAAC,aAAa,CAAC,CAAC;AAChL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}